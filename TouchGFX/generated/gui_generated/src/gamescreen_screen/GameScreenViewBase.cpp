/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/gamescreen_screen/GameScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

GameScreenViewBase::GameScreenViewBase() :
    buttonCallback(this, &GameScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(-18, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(image1);

    menu_button.setXY(70, 238);
    menu_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    menu_button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_S85H));
    menu_button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    menu_button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    menu_button.setAction(buttonCallback);
    add(menu_button);

    high_score_holder.setPosition(0, 177, 240, 30);
    high_score_holder.setColor(touchgfx::Color::getColorFromRGB(232, 197, 100));
    high_score_holder.setLinespacing(0);
    Unicode::snprintf(high_score_holderBuffer, HIGH_SCORE_HOLDER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PVS2).getText());
    high_score_holder.setWildcard(high_score_holderBuffer);
    high_score_holder.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X8R5));
    add(high_score_holder);

    score_holder.setPosition(0, 143, 240, 34);
    score_holder.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    score_holder.setLinespacing(0);
    score_holderBuffer[0] = 0;
    score_holder.setWildcard(score_holderBuffer);
    score_holder.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3PFU));
    add(score_holder);

    animatedImage1.setXY(201, -1);
    animatedImage1.setBitmaps(BITMAP_ENEMY_GREEN_01_ID, BITMAP_ENEMY_GREEN_01_ID);
    animatedImage1.setUpdateTicksInterval(1);
    animatedImage1.setAlpha(0);
    add(animatedImage1);

    score_board.setPosition(6, 0, 96, 29);
    score_board.setColor(touchgfx::Color::getColorFromRGB(247, 242, 242));
    score_board.setLinespacing(0);
    score_board.setWideTextAction(WIDE_TEXT_WORDWRAP_ELLIPSIS_AFTER_SPACE);
    Unicode::snprintf(score_boardBuffer, SCORE_BOARD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CZL8).getText());
    score_board.setWildcard(score_boardBuffer);
    score_board.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0RZO));
    add(score_board);

    lives_01.setXY(172, 0);
    lives_01.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_MAIN_ID));
    add(lives_01);

    lives_board.setXY(214, 8);
    lives_board.setColor(touchgfx::Color::getColorFromRGB(250, 245, 245));
    lives_board.setLinespacing(0);
    Unicode::snprintf(lives_boardBuffer, LIVES_BOARD_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SU7Z).getText());
    lives_board.setWildcard(lives_boardBuffer);
    lives_board.resizeToCurrentText();
    lives_board.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6DL2));
    add(lives_board);

    wall.setXY(11, 57);
    wall.setBitmap(touchgfx::Bitmap(BITMAP_XANH_LA_ID));
    add(wall);
}

GameScreenViewBase::~GameScreenViewBase()
{

}

void GameScreenViewBase::setupScreen()
{

}

void GameScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &menu_button)
    {
        //Interaction1
        //When menu_button clicked change screen to MenuScreen
        //Go to MenuScreen with screen transition towards East
        application().gotoMenuScreenScreenSlideTransitionEast();
    }
}
